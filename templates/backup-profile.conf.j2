#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
{% if _profile.value.src is defined or backup.source_prefix is defined %}
{# jinja tries to expand the default values even if they're not needed #}
{# to work around this we could add a default for the default value -  #}
{# which would silence errors - or just do this if construct, which    #}
{# will throw an error if the global fallback doesn't exist            #}
 {% if _profile.value.src is defined %}
SOURCE_SRC={{_profile.value.src}}
 {% else %}
SOURCE_SRC={{backup.source_prefix + '/' + _profile.key}}
 {% endif %}
{% endif %}
SOURCE_OPTS={{_profile.value.opts|default('ro,X-mount.mkdir')}}
{% if _profile.value.path is defined %}
SOURCE_PATH={{_profile.value.path}}
{% else %}
SOURCE_PATH={{backup.dest_prefix + '/' + _profile.key}}
{% endif %}
{% if _profile.value.excludes is defined %}
EXCLUDE_FILE={{_backup_exclude_dir}}/{{_profile.key}}.excludes
{% endif %}
{% if _profile.value.maxnum is defined %}
NUMBAK={{_profile.value.maxnum}}
{% endif %}
{% if _profile.value.log_archive_pattern is defined or backup.log_archive_pattern is defined%}
 {% if _profile.value.log_archive_pattern is defined %}
LOG_ARCHIVE_PATTERN={{profile.value.log_archive_pattern}}
 {% else %}
LOG_ARCHIVE_PATTERN={{backup.log_archive_pattern}}
 {% endif %}
{% endif %}
{% if _profile.value.target is defined %}
# This overrides a global target definition
TARGET={{_profile.value.target}}
{% endif %}
{% if _profile.value.type is defined or backup.type is defined %}
BACKYP_TYPE={{_profile.value.type|default(backup.type)}}
  {% if _profile.value.type|default(backup.type) == "restic" %}
export RESTIC_REPOSITORY={{_profile.value.target|default(backup.target)}}
  {% endif %}
{% endif %}
